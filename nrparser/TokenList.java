package nrparser;import java.util.*;import java.io.*;/***Wraps StringTokenizer with look ahead functionality.*/public class TokenList{    private StreamTokenizer tokenizer;    private String next;        /**     *Makes the TokenList for file "file".     *     *Throws exception if the file does not exist.     */    public TokenList(String theFile) throws IOException{	FileInputStream stream = new FileInputStream(theFile);	Reader r = new BufferedReader(new InputStreamReader(stream));	tokenizer = new StreamTokenizer(r);	next = null;    }            /**     *If next has item in it return next and set next to     *NULL.     *else get next token from tokenizer.     */    public String pop() throws java.io.IOException    {	String temp;	String tempNext;	if (next != null){	    tempNext = next;	    next = null;	    return tempNext;	}	else{	    tokenizer.resetSyntax();	    tokenizer.whitespaceChars(0,32);	    tokenizer.wordChars(33,127);	    tokenizer.ordinaryChar(60);	    tokenizer.ordinaryChar(62);	    int tokenType = tokenizer.nextToken();	    if (tokenType == StreamTokenizer.TT_EOF)		return null;	    if (tokenType == StreamTokenizer.TT_WORD)		return tokenizer.sval;	    if (tokenizer.ttype == 60){		String returnValue = "<";		tokenizer.resetSyntax();		tokenizer.wordChars(0,127);		tokenizer.ordinaryChar(60);		tokenizer.ordinaryChar(62);		while (tokenizer.ttype != 62){		    int thetype = tokenizer.nextToken();		    if (tokenizer.ttype == 60)			throw new java.io.IOException();		    if (tokenizer.ttype != 62){			temp = tokenizer.sval;			returnValue = returnValue + temp;		    }		}		returnValue = returnValue + ">";				return returnValue;	    }	}	return null;    }        /**     * receives a pushed value and puts it on the top of the "stack".     * @param pushValue      */    public void push(String pushValue)    {	next = pushValue;    }}